@{
    ViewBag.Title = "Home";
}

<div class="row">
    <div id="searchResults" class="panel panel-default">
        <div class="panel-heading">Select from these locations:</div>      
        <div class="panel-body">jim</div>  
        <button class="btn btn-default" type="button">Cancel</button>
    </div>
</div>

@section scripts
{
    <script src="~/ClientTemplates/SearchResults.html" id="searchResultsTemplate" type="text/x-handlebars-template"></script>

    <script type="text/javascript">
        var userLocation;
        var searchHandler;
        var searchResultsTemplate;
        $(function() {
            userLocation = new UserLocation(locationChange);

            var options = {
                resultCallback: searchResult,
                postalSearchUri: '@Url.RouteUrl("FindZip",
                                      new {httproute = "true", controller = "Search", action = "FindZip", zipcode = ""})',
                addressSearchUri: '@Url.RouteUrl("FindAddress",
                                       new {httproute = "true", controller = "Search", action = "FindAddress", address = ""})'
            }

            searchHandler = new Search(options);

            $("#searchButton").on('click', doSearch);
        });

        function doSearch(event) {
            var value = $("#searchText").val();
            if (value !== '') {
                searchHandler.search(value);
            } else {
                showError("No search information was entered.");
            }
        }

        function locationChange(location, error) {
            if (error == null) {
                error = "no errors";
            }

            $("#locationError").text(error);
            var locationString = "lat: " + location.coords.latitude + "<br />";
            locationString += "lon: " + location.coords.latitude + "<br />";
            $("#currentLocationContainer").text(locationString);
        }

        function searchResult(data) {
            if ($.isArray(data)) {
                showSearchPicker(data);
            } else {
                var location = {
                    coords: {
                        latitude: data.Latitude,
                        longitude: data.Longitude,
                        description: data.Description
                    }
                };

                locationChange(location, null);
            }
        }

        function showSearchPicker(data) {
            var picker = $("#searchResults");

            //load
            var locations = [];
            $.each(data, function(index, value) {
                locations.push({
                    latitude: value.Latitude,
                    longitude: value.Longitude,
                    description: value.Description
                });
            });

            var context = {
                locations: locations
            };

            var promise = getSearchResultsTemplate()
                .done(function (template) {
                    var html = template(context);
                    $(".panel-body", picker).html(html);
                    picker.show();
                });

        }

        function getSearchResultsTemplate() {

            var deferred = $.Deferred();

            if (searchResultsTemplate != null) {
                deferred.resolve(searchResultsTemplate);                                
            } else {
                var options = {
                    async: true,
                    cache: true,
                    dataType: 'html'
                };

                $.ajax('@Url.Content("~/ClientTemplates/SearchResults.html")', options)
                    .done(function(data) {
                        searchResultsTemplate = Handlebars.compile(data);
                        deferred.resolve(searchResultsTemplate);
                    });                       
            }

            return deferred.promise();
        }
    </script>

}
