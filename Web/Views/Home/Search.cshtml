@using Web.Extensions
@{
    ViewBag.Title = "Home";
    
}

<div class="row">
    @Html.Partial("SearchBox")
</div>
<div class="row">
    <div id="searchResults" class="hidden panel panel-default">
        <div class="panel-heading">Select from these locations:</div>      
        @using (Html.BeginPanelBody())
        {
            <text>Loading...</text>
        }

        @using (Html.BeginPanelBody()) {
            var attribs = new Dictionary<string, object>();
            attribs.Add("class", "closeButton");
            using (Html.BeginDefaultButton(attribs)) { 
                <text>Close</text>
            }
        }
    </div>
</div>

<textarea id="locationDisplay">    
</textarea>
@section scripts
{
    <script type="text/javascript">
        var userLocation;
        var searchHandler;
        var utility = new Utility();
        var searchResultManager;
        
        var locationUpdateTimeout = 10000;
        var locationUpdateInterval = null;

        var defaultLocation = Constants.defaultLocation;
        
        $(function() {
            var options = {
                postalSearchUri: '@Url.RouteUrl("FindZip",
                                      new {httproute = "true", controller = "Search", action = "FindZip", zipcode = ""})',
                addressSearchUri: '@Url.RouteUrl("FindAddress",
                                       new {httproute = "true", controller = "Search", action = "FindAddress", address = ""})',
                coordinateSearchUri: '@Url.RouteUrl("FindCoordinate",
                                          new {httproute = "true", controller = "Search", action = "FindCoordinate"})'
            }

            searchHandler = new Search(options);

            searchResultManager = new SearchResultsManager($("#searchResults"),
                '@Url.Content("~/ClientTemplates/SearchResults.html")',
                locationChange);

            $("#searchButton").on('click', doSearch);
            
        });

        function doSearch(event) {
            //turn auto update off
            //autoUpdateLocation(false);

            var value = $("#searchText").val();
            if (value !== '') {
                searchHandler.searchAddress(value)
                    .done(searchResult);
            } else {
                utility.showError("No search information was entered.");
            }
        }

        function locationChange(location, error) {
            if (error == null) {
                error = "no errors";
            }

            if (location != null) {
                var deferred = $.Deferred();
                deferred.done(function(theLocation, theError) {
                    $("#locationError").text(theError);

                    var locationString = new Date().toLocaleString() + "\n";
                    locationString += "lat: " + theLocation.coords.latitude + "\n";
                    locationString += "lon: " + theLocation.coords.longitude + "\n";
                    if (theLocation.description) {
                        locationString += "description: " + theLocation.description;
                    }
                    locationString += "\n\n";

                    var display = $("#locationDisplay");
                    display.text(display.text() + locationString);
                });

                deferred.resolve(location, error);
            }

            
        }

        function autoUpdateLocation(turnOn) {
            if (turnOn) {
                locationUpdateInterval = window.setInterval(updateLocation, locationUpdateTimeout);
            } else {
                if (locationUpdateInterval != null) {
                    window.clearInterval(locationUpdateInterval);
                    locationUpdateInterval = null;
                }
            }
        }

        function updateLocation() {
            console.log("Updating location...");
            userLocation.update();
        }

        function searchResult(data) {
            if ($.isArray(data)) {
                searchResultManager.load(data);

            } else {
                var location = utility.toCoordinate(data);

                locationChange(location, null);
            }
        }


    </script>

}
